#!/usr/bin/env node
'use strict';


if (['dev', 'development', 'debug'].indexOf(process.env.NODE_ENV) > -1) {
  process.on('uncaughtException', (e) => {
    console.log(e, 'Unhandled Exception');
    process.exit(1);
  });

  process.on('unhandledRejection', (reason, promise) => {
    console.log({promise: promise, reason: reason}, 'Unhandled Rejection');
    process.exit(1);
  });
}


const icli = require('comquirer');

icli.init = function() {
  // Useful to reinit the cli for integration tests
  Object.keys(require.cache).forEach(function(key) { delete require.cache[key]; });
  icli.reset();
  icli.getProgram().commandHelp = require('../commander-help-override');

  // Add base commands
  require('../cli/disable-default')(icli);
  require('../cli/please')(icli);

  // Check if the user calls the command from a lager project
  return require('../load-lager-project')(icli)
  .then(lager => {
    if (lager) {
      // If a Lager instance is found, we add the "show-config" command
      require('../cli/show-config')(icli, lager);
    } else {
      // If no Lager instance is found, we add the "new" command
      require('../cli/new')(icli);
    }
    return Promise.resolve(icli);
  });
};

module.exports = icli;

if (require.main === module) {
  // If the module is called directly, we parse the command line
  icli.init().then(icli => {
    if (!process.argv.slice(2).length) {
      // If no arguments where provided, we call the help option
      icli.getProgram().outputHelp();
    } else {
      icli.getProgram().parse(process.argv);
    }
  });
}
